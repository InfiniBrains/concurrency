name: Test

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - master
      - main

env:
  CTEST_OUTPUT_ON_FAILURE: 1
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  CPM_SOURCE_CACHE: ${{ github.workspace }}/cpm_modules

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: "**/cpm_modules"
          key: ${{ matrix.os }}-${{ github.workflow }}-cpm-modules-${{ hashFiles('**/CMakeLists.txt', '**/*.cmake') }}

      - name: configure
        run: cmake -S. -Bbuild -DENABLE_TEST_COVERAGE=ON -DENABLE_STANDALONE=OFF -DENABLE_DOCUMENTATION=OFF  -DCMAKE_BUILD_TYPE=Debug

      - name: build
        run: cmake --build build -j4 --target ConcurrencyTests

      - name: test
        run: |
          cd build
          cd test
          ctest --build-config Debug

      - name: collect code coverage on ubuntu
        if: startsWith(matrix.os,'ubuntu') && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
        run: bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"
